/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import network.cardboard.crystallogic.AbilityScores;
import org.junit.Assert;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 * This is the test file for AbilityScores
 * It is likely to be missing some possible tests, or have some incomplete tests, as it is rather new.
 *
 * @author William Bullock
 * @version 0.1
 * @since 2019-02-25 21:46
 */
public class AbilityScoresTest {

    /**
     * This test is designed to create a default AbilityScores object and verify the normal responses and values
     */
    @Test
    public void testDefaultAbilityScores()
    {
        AbilityScores testAbilityScores = new AbilityScores();

        /* As a general rule, I believe that the minimum default value of any ability score is 1.
         * This is due to the fact that anything with a score of 0 is essentially dead. */
        Assert.assertEquals("Test that default STR Value is 1", 1, testAbilityScores.strength.getValue());
        Assert.assertEquals("Test that default DEX Value is 1", 1, testAbilityScores.dexterity.getValue());
        Assert.assertEquals("Test that default CON Value is 1", 1, testAbilityScores.constitution.getValue());
        Assert.assertEquals("Test that default INT Value is 1", 1, testAbilityScores.intelligence.getValue());
        Assert.assertEquals("Test that default WIS Value is 1", 1, testAbilityScores.wisdom.getValue());
        Assert.assertEquals("Test that default CHA Value is 1", 1, testAbilityScores.charisma.getValue());

        /* As the minimum value is 1, the minimum modifier should be -5 */
        Assert.assertEquals("Test that the STR Modifier is -5", -5, testAbilityScores.strength.getModifier());
        Assert.assertEquals("Test that the DEX Modifier is -5", -5, testAbilityScores.dexterity.getModifier());
        Assert.assertEquals("Test that the CON Modifier is -5", -5, testAbilityScores.constitution.getModifier());
        Assert.assertEquals("Test that the INT Modifier is -5", -5, testAbilityScores.intelligence.getModifier());
        Assert.assertEquals("Test that the WIS Modifier is -5", -5, testAbilityScores.wisdom.getModifier());
        Assert.assertEquals("Test that the CHA Modifier is -5", -5, testAbilityScores.charisma.getModifier());
    }

    /**
     * This test is designed to create an AbilityScores object with fully defined numbers and verify the values.
     */
    @Test
    public void testFullNumberAbilityScores()
    {
        /*
        This is going to set the values.  The responses should be as follows:
        STR:   Value: 20   Mod: 5
        DEX:   Value: 15   Mod: 2
        CON:   Value: 13   Mod: 1
        INT:   Value: 12   Mod: 1
        WIS:   Value: 4    Mod: -3
        CHA:   Value: 1    Mod: -5
         */
        AbilityScores testAbilityScores = new AbilityScores(20, 15, 13, 12, 4, 1);

        Assert.assertEquals("Test that default STR Value is 1", 20, testAbilityScores.strength.getValue());
        Assert.assertEquals("Test that default DEX Value is 1", 15, testAbilityScores.dexterity.getValue());
        Assert.assertEquals("Test that default CON Value is 1", 13, testAbilityScores.constitution.getValue());
        Assert.assertEquals("Test that default INT Value is 1", 12, testAbilityScores.intelligence.getValue());
        Assert.assertEquals("Test that default WIS Value is 1", 4, testAbilityScores.wisdom.getValue());
        Assert.assertEquals("Test that default CHA Value is 1", 1, testAbilityScores.charisma.getValue());

        Assert.assertEquals("Test that the STR Modifier is -5", 5, testAbilityScores.strength.getModifier());
        Assert.assertEquals("Test that the DEX Modifier is -5", 2, testAbilityScores.dexterity.getModifier());
        Assert.assertEquals("Test that the CON Modifier is -5", 1, testAbilityScores.constitution.getModifier());
        Assert.assertEquals("Test that the INT Modifier is -5", 1, testAbilityScores.intelligence.getModifier());
        Assert.assertEquals("Test that the WIS Modifier is -5", -3, testAbilityScores.wisdom.getModifier());
        Assert.assertEquals("Test that the CHA Modifier is -5", -5, testAbilityScores.charisma.getModifier());
    }

    /**
     * This test is designed to create an AbilityScores object using the constructor AbilityScores(int) and verify the values
     */
    @Test
    public void testSingleValueInputAbilityScores()
    {
        /*
        As all values and modifiers should be the same value, all values returned should be 17, and all mods returned should be 3
         */
        AbilityScores testAbilityScores = new AbilityScores(17);

        Assert.assertEquals("Test that default STR Value is 1", 17, testAbilityScores.strength.getValue());
        Assert.assertEquals("Test that default DEX Value is 1", 17, testAbilityScores.dexterity.getValue());
        Assert.assertEquals("Test that default CON Value is 1", 17, testAbilityScores.constitution.getValue());
        Assert.assertEquals("Test that default INT Value is 1", 17, testAbilityScores.intelligence.getValue());
        Assert.assertEquals("Test that default WIS Value is 1", 17, testAbilityScores.wisdom.getValue());
        Assert.assertEquals("Test that default CHA Value is 1", 17, testAbilityScores.charisma.getValue());

        /* As the minimum value is 1, the minimum modifier should be -5 */
        Assert.assertEquals("Test that the STR Modifier is -5", 3, testAbilityScores.strength.getModifier());
        Assert.assertEquals("Test that the DEX Modifier is -5", 3, testAbilityScores.dexterity.getModifier());
        Assert.assertEquals("Test that the CON Modifier is -5", 3, testAbilityScores.constitution.getModifier());
        Assert.assertEquals("Test that the INT Modifier is -5", 3, testAbilityScores.intelligence.getModifier());
        Assert.assertEquals("Test that the WIS Modifier is -5", 3, testAbilityScores.wisdom.getModifier());
        Assert.assertEquals("Test that the CHA Modifier is -5", 3, testAbilityScores.charisma.getModifier());
    }
}
